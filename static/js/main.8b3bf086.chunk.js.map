{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onClick","useState","query","setQuery","setMovie","isLoading","setIsLoading","error","setError","useEffect","handleSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","poster","Title","Plot","Poster","imdbID","normalizeData","finally","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","trim","App","setMovies","foundMovie","includes","addedeMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b3bf086.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  onClick: (movie: Movie) => void;\n};\n\ntype NormalizeData = (movieDate: MovieData) => void;\n\nexport const FindMovie: React.FC<Props> = ({ onClick }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (error) {\n      setError('');\n    }\n  }, [query]);\n\n  const checkImage = (poster: string) => {\n    return poster !== 'N/A'\n      ? poster\n      : 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  };\n\n  const normalizeData: NormalizeData = ({\n    Title,\n    Plot,\n    Poster,\n    imdbID,\n  }) => {\n    setMovie({\n      title: Title,\n      description: Plot,\n      imgUrl: checkImage(Poster),\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    return getMovie(query)\n      .then((res) => {\n        if ('imdbID' in res) {\n          normalizeData(res);\n        } else {\n          setError('Can\\'t find a movie with such a title');\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleAddFilm = () => {\n    if (movie !== null) {\n      onClick(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={event => handleSubmit(event)}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={query}\n              onChange={event => setQuery(event.target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query.trim()}\n            >\n              {movie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddFilm}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=fe83796d';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (foundMovie: Movie) => {\n    if (!movies.map(movie => movie.imdbId).includes(foundMovie.imdbId)) {\n      setMovies(addedeMovies => [...addedeMovies, foundMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onClick={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}